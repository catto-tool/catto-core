/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 09 16:15:45 GMT 2018
 */

package testselector.testSelector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;
import soot.SootMethod;
import soot.jimple.toolkits.callgraph.CallGraph;
import testselector.project.Project;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Set;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.evosuite.shaded.org.mockito.Mockito.doReturn;
import static org.evosuite.shaded.org.mockito.Mockito.mock;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class TestSelector_ESTest extends TestSelector_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        ArrayList<SootMethod> arrayList0 = new ArrayList<SootMethod>();
        Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
        doReturn((CallGraph) null).when(project0).getCallGraph();
        doReturn(arrayList0).when(project0).getEntryPoints();
        TestSelector testSelector0 = new TestSelector(project0, project0);
        arrayList0.add((SootMethod) null);
        // Undeclared exception!
        try {
            testSelector0.selectTest();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("testselector.testSelector.TestSelector", e);
        }
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
        TestSelector testSelector0 = new TestSelector(project0, project0);
        Set<testselector.testSelector.Test> set0 = testSelector0.getDifferentMethodAndTheirTest();
        assertEquals(0, set0.size());
    }


    @Test(timeout = 4000)
    public void test3() throws Throwable {
        TestSelector testSelector0 = new TestSelector((Project) null, (Project) null);
        Set<testselector.testSelector.Test> set0 = testSelector0.getNewMethodsAndTheirTest();
        assertEquals(0, set0.size());
    }

    @Test(timeout = 4000)
    public void test4() throws Throwable {
        ArrayList<SootMethod> arrayList0 = new ArrayList<SootMethod>();
        CallGraph callGraph0 = new CallGraph();
        Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
        doReturn(callGraph0).when(project0).getCallGraph();
        doReturn(arrayList0).when(project0).getEntryPoints();
        TestSelector testSelector0 = new TestSelector(project0, project0);
        arrayList0.add((SootMethod) null);
        // Undeclared exception!
        try {
            testSelector0.selectTest();
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("soot.jimple.toolkits.callgraph.CallGraph$TargetsOfMethodIterator", e);
        }
    }

    @Test(timeout = 4000)
    public void test5() throws Throwable {
        TestSelector testSelector0 = new TestSelector((Project) null, (Project) null);
        Collection<Set<String>> collection0 = testSelector0.getChangedMethods();
        assertNotNull(collection0);
    }

    @Test(timeout = 4000)
    public void test6() throws Throwable {
        Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
        TestSelector testSelector0 = new TestSelector(project0, project0);
        Collection<Set<String>> collection0 = testSelector0.getNewOrRemovedMethods();
        assertNotNull(collection0);
    }

    @Test(timeout = 4000)
    public void test7() throws Throwable {
        ArrayList<SootMethod> arrayList0 = new ArrayList<SootMethod>();
        Project project0 = mock(Project.class, new ViolatedAssumptionAnswer());
        doReturn(arrayList0, (List) null).when(project0).getEntryPoints();
        TestSelector testSelector0 = new TestSelector(project0, project0);
        // Undeclared exception!
        try {
            testSelector0.selectTest();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("testselector.testSelector.TestSelector", e);
        }
    }
}
