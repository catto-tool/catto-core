/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 09 16:13:02 GMT 2018
 */

package testselector.testSelector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.lang.reflect.Method;
import java.util.LinkedHashSet;
import java.util.Set;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Test_ESTest extends Test_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        testselector.testSelector.Test test0 = new testselector.testSelector.Test((Method) null, linkedHashSet0);
        // Undeclared exception!
        try {
            test0.runTest();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("testselector.testSelector.Test", e);
        }
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        testselector.testSelector.Test test0 = null;
        try {
            test0 = new testselector.testSelector.Test((Method) null, (Set<String>) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.util.HashSet", e);
        }
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        testselector.testSelector.Test test0 = new testselector.testSelector.Test((Method) null);
        Set<String> set0 = test0.getTestingMethods();
        testselector.testSelector.Test test1 = new testselector.testSelector.Test((Method) null, set0);
        boolean boolean0 = test1.equals(test0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        testselector.testSelector.Test test0 = new testselector.testSelector.Test((Method) null);
        boolean boolean0 = test0.equals(test0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        testselector.testSelector.Test test0 = new testselector.testSelector.Test((Method) null, linkedHashSet0);
        boolean boolean0 = test0.equals(linkedHashSet0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5() throws Throwable {
        testselector.testSelector.Test test0 = new testselector.testSelector.Test((Method) null);
        test0.addTestingMethod("");
        Set<String> set0 = test0.getTestingMethods();
        assertEquals(1, set0.size());
    }

    @Test(timeout = 4000)
    public void test6() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        testselector.testSelector.Test test0 = new testselector.testSelector.Test((Method) null, linkedHashSet0);
        test0.hashCode();
    }

    @Test(timeout = 4000)
    public void test7() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        testselector.testSelector.Test test0 = new testselector.testSelector.Test((Method) null, linkedHashSet0);
        Method method0 = test0.getTestMethod();
        assertNull(method0);
    }
}
